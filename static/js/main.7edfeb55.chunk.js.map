{"version":3,"sources":["components/citySelector/citySelector.js","redux/actions.js","components/bankSelector/bankSelector.js","components/loader/loader.js","components/bankInfo/bankInfo.js","components/app/app.js","redux/reducer.js","redux/sagas.js","store.js","index.js"],"names":["cities","useSelector","state","dispatch","useDispatch","onChange","event","type","payload","target","value","map","item","index","key","data","selectedIndex","className","bic","inn","kpp","connect","loading","props","length","initialState","error","activeCity","reducer","action","sagaWatcher","workerSaga","getAxiosData","takeEvery","put","call","response","result","suggestions","console","log","select","city","Axios","post","headers","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7edfeb55.chunk.js","sourcesContent":["import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {setActiveCity} from \"../../redux/actions\";\n\nexport default () => {\n    const  cities = useSelector(state => state.cities)\n    const dispatch = useDispatch()\n\n    const setCity = (event) =>{\n        dispatch(setActiveCity(event.target.value))\n    }\n\n    return (\n        <select onChange={setCity}>\n            {cities.map((item,index)=>{return <option key={index}>{item}</option>})}\n        </select>\n    )\n}\n","\nconst setSelectedBankIndex = (index) => {\n    return {\n        type: \"SET_SELECTED_BANK_INDEX\",\n        payload: index\n    }\n}\n\nconst setZeroBankIndex = () => {\n    return {\n        type: \"SET_ZERO_BANK_INDEX\"\n    }\n}\n\n\nconst setActiveCity = (city) => {\n    return {\n        type: \"SET_ACTIVE_CITY\",\n        payload: city\n    }\n}\n\nconst startLoading = () => {\n    return {\n        type: \"START_LOADING\"\n    }\n}\nconst stopLoading = () => {\n    return {\n        type: \"STOP_LOADING\"\n    }\n}\n\nexport {\n\n    setSelectedBankIndex,\n    stopLoading,\n    startLoading,\n    setActiveCity,\n    setZeroBankIndex\n}","import React, {Fragment} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport {setSelectedBankIndex} from \"../../redux/actions\";\n\nexport default () => {\n\n    const dispatch = useDispatch()\n    const data = useSelector(state => state.data)\n    const setIndex = (event) => {\n        dispatch(setSelectedBankIndex(event.target.selectedIndex))\n    }\n\n    return (\n        <Fragment>\n            <select onChange={setIndex}>\n                {data.map((item,index)=> {\n                    return  <option key={index}>{item.value}</option>\n                })}\n            </select>\n        </Fragment>\n    )\n}\n","import React from \"react\";\nimport './loader.css'\n\nexport default () => {\n    return <div className=\"lds-dual-ring\"></div>\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport './bankInfo.css'\n\nexport default () => {\n    const data = useSelector(state => state.data)\n    const index = useSelector(state => state.selectedIndex)\n    return (\n        <div className=\"bankInfo\">\n            <div>\n                <p>Название: {data[index].value?data[index].value:0}</p>\n            </div>\n            <div>\n                <p>БИК: {data[index].data.bic}</p>\n            </div>\n            <div>\n                <p>ИНН: {data[index].data.inn}</p>\n            </div>\n            <div>\n                <p>КПП: {data[index].data.kpp}</p>\n            </div>\n        </div>\n\n    )\n}\n","import React, {Fragment} from \"react\";\nimport { connect } from 'react-redux'\nimport CitySelector from '../citySelector/citySelector'\nimport BankSelector from \"../bankSelector/bankSelector\";\nimport Loader from '../loader/loader'\nimport BankInfo from \"../bankInfo/bankInfo\";\nimport './app.css'\n\nconst App = props => {\n      return (\n            <div className=\"container\">\n                  <CitySelector/>\n                  {\n                      (props.data.length===0)?\n                          null\n                          :props.loading?\n                              <Loader/>\n                              :<Fragment>\n                                    <BankSelector/>\n                                    {props.data.length===0?null:<BankInfo/>}\n                               </Fragment>\n                  }\n\n            </div>\n      )\n}\n\nconst mapStateToProps = state => {\n    return {\n        data: state.data,\n        loading: state.loading,\n        selectedIndex: state.selectedIndex\n    }\n}\n\nexport default connect(mapStateToProps, null)(App)","\nconst  initialState = {\n    data: [],\n    cities: ['Москва','Самара','Санкт-петербург','Саратов','Казань'],\n    loading: false,\n    error: false,\n    activeCity: 'Москва'\n}\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'REQUEST_DATA_SUCCESS':\n            return {\n                ...state, data: action.payload\n            }\n        case 'SET_SELECTED_BANK_INDEX':\n            return {\n                ...state, selectedIndex: action.payload\n            }\n        case 'SET_ZERO_BANK_INDEX':\n            return {\n                ...state, selectedIndex: 0\n            }\n        case 'SET_ACTIVE_CITY':\n            return {\n                ...state, activeCity: action.payload\n            }\n        case 'START_LOADING':\n            return {\n                ...state, loading: true\n            }\n        case 'STOP_LOADING':\n            return {\n                ...state, loading: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import {takeEvery,put,call,select} from  'redux-saga/effects'\nimport {setZeroBankIndex, startLoading, stopLoading} from \"./actions\";\nimport Axios from \"axios\";\n\nexport function* sagaWatcher() {\n   yield takeEvery(\"SET_ACTIVE_CITY\", workerSaga)\n}\n\nfunction* workerSaga() {\n   yield put(startLoading())\n   yield put(setZeroBankIndex())\n   try {\n      const response = yield call(getAxiosData)\n      const result = response.data.suggestions\n      yield put({type: \"REQUEST_DATA_SUCCESS\", payload: result})\n      yield put(stopLoading())\n  } catch (e) {\n      console.log(e)\n   }\n}\n\nfunction* getAxiosData () {\n\n   const city = yield select((state)=>state.activeCity)\n\n   return yield Axios.post(\n          'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/bank',\n          {\"query\": city , \"count\": 20},{\n             headers: {\"Authorization\": \"Token 35fb812dea47683ebc59245b3a4d30b6966735ef\",\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'}})\n   }\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducer'\nimport createSagaMiddleware from 'redux-saga'\nimport {sagaWatcher} from './redux/sagas'\nconst saga = createSagaMiddleware()\n\nconst store = createStore(reducer, compose(\napplyMiddleware( thunk, saga\n    )\n    /* ,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() */\n))\n\nsaga.run(sagaWatcher)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport App from './components/app/app'\nimport store from './store'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}